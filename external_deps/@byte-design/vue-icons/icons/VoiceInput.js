"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _runtime = require("../runtime");

/**
 * @file voice-input 语音文字
 * @author Auto Generated by BD
 */

/* tslint:disable: max-line-length*/

/* eslint-disable max-len */
var _default = (0, _runtime.IconWrapper)('voice-input', function (h, props) {
  return h("svg", {
    "attrs": {
      "width": props.size,
      "height": props.size,
      "viewBox": "0 0 48 48",
      "fill": "none",
      "xmlns": "http://www.w3.org/2000/svg"
    }
  }, [h("path", {
    "attrs": {
      "d": "M40.7273 30L35 9L28.5385 30H40.7273Z",
      "fill": props.outFillColor
    }
  }), h("path", {
    "attrs": {
      "d": "M4 30C4 36.6274 9.37258 42 16 42C22.6274 42 26 38 27 35L28.5385 30M44 42L40.7273 30M40.7273 30L35 9L28.5385 30M40.7273 30H28.5385",
      "stroke": props.outStrokeColor,
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  }), h("rect", {
    "attrs": {
      "x": "10",
      "y": "9",
      "width": "12",
      "height": "27",
      "rx": "6",
      "fill": props.outFillColor,
      "stroke": props.outStrokeColor,
      "stroke-width": props.strokeWidth,
      "stroke-linecap": props.strokeLinecap,
      "stroke-linejoin": props.strokeLinejoin
    }
  })]);
});

exports.default = _default;